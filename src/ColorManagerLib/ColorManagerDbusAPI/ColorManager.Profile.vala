/* Generated by vala-dbus-binding-tool 1.0-aa2fb. Do not modify! */
/* Generated with: vala-dbus-binding-tool --api-path=ColorManager.Profile.xml */
using GLib;

namespace org {

	namespace freedesktop {

		namespace ColorManager {

			[DBus (name = "org.freedesktop.ColorManager.Profile", timeout = 120000)]
			public interface Profile : GLib.Object {

				[DBus (name = "SetProperty")]
				public abstract void set_property(string property_name, string property_value) throws DBusError, IOError;

				[DBus (name = "InstallSystemWide")]
				public abstract void install_system_wide() throws DBusError, IOError;

				[DBus (name = "Changed")]
				public signal void changed();

				[DBus (name = "ProfileId")]
				public abstract string profile_id { owned get; }

				[DBus (name = "Title")]
				public abstract string title { owned get; }

				[DBus (name = "Metadata")]
				public abstract GLib.HashTable<string, string> metadata { owned get; }

				[DBus (name = "Qualifier")]
				public abstract string qualifier { owned get; }

				[DBus (name = "Format")]
				public abstract string format { owned get; }

				[DBus (name = "Kind")]
				public abstract string kind { owned get; }

				[DBus (name = "Colorspace")]
				public abstract string colorspace { owned get; }

				[DBus (name = "HasVcgt")]
				public abstract bool has_vcgt {  get; }

				[DBus (name = "IsSystemWide")]
				public abstract bool is_system_wide {  get; }

				[DBus (name = "Filename")]
				public abstract string filename { owned get; }

				[DBus (name = "Created")]
				public abstract int64 created {  get; }

				[DBus (name = "Scope")]
				public abstract string scope { owned get; }

				[DBus (name = "Owner")]
				public abstract uint owner {  get; }

				[DBus (name = "Warnings")]
				public abstract string[] warnings { owned get; }
			}

			[DBus (name = "org.freedesktop.ColorManager.Profile", timeout = 120000)]
			public interface ProfileSync : GLib.Object {

				[DBus (name = "SetProperty")]
				public abstract void set_property(string property_name, string property_value) throws DBusError, IOError;

				[DBus (name = "InstallSystemWide")]
				public abstract void install_system_wide() throws DBusError, IOError;

				[DBus (name = "Changed")]
				public signal void changed();

				[DBus (name = "ProfileId")]
				public abstract string profile_id { owned get; }

				[DBus (name = "Title")]
				public abstract string title { owned get; }

				[DBus (name = "Metadata")]
				public abstract GLib.HashTable<string, string> metadata { owned get; }

				[DBus (name = "Qualifier")]
				public abstract string qualifier { owned get; }

				[DBus (name = "Format")]
				public abstract string format { owned get; }

				[DBus (name = "Kind")]
				public abstract string kind { owned get; }

				[DBus (name = "Colorspace")]
				public abstract string colorspace { owned get; }

				[DBus (name = "HasVcgt")]
				public abstract bool has_vcgt {  get; }

				[DBus (name = "IsSystemWide")]
				public abstract bool is_system_wide {  get; }

				[DBus (name = "Filename")]
				public abstract string filename { owned get; }

				[DBus (name = "Created")]
				public abstract int64 created {  get; }

				[DBus (name = "Scope")]
				public abstract string scope { owned get; }

				[DBus (name = "Owner")]
				public abstract uint owner {  get; }

				[DBus (name = "Warnings")]
				public abstract string[] warnings { owned get; }
			}
		}
	}
}
